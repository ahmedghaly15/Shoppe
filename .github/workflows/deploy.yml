name: Build and Distribute Shoppe

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      version_bump_strategy:
        description: 'Version bump strategy'
        required: false
        default: 'patch'
        type: choice
        options:
          - major
          - minor
          - patch
          - build

permissions:
  contents: write

jobs:
  distribute:
    if: contains(github.event.head_commit.message, 'deploy') || github.event_name == 'workflow_dispatch'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Git
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"

      - name: Check if release_notes.txt updated
        run: |
          # Get the commit range (if only 1 commit exists, fallback to HEAD)
          if git rev-parse HEAD~1 >/dev/null 2>&1; then
            RANGE="HEAD~1..HEAD"
          else
            RANGE="HEAD"
          fi

          # Check if release_notes.txt is in the commit(s)
          if ! git diff --name-only $RANGE | grep -q "release_notes.txt"; then
            echo "❌ You must update release_notes.txt before deploying!"
            exit 1
          fi

          # Check file not empty
          if [ ! -s release_notes.txt ]; then
            echo "❌ release_notes.txt is empty!"
            exit 1
          fi

          echo "✅ release_notes.txt is updated."

      - name: Setup Java 17
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Install Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          flutter-version: '3.x'
    
      - name: Accept Android SDK licenses
        run: yes | /usr/local/lib/android/sdk/cmdline-tools/latest/bin/sdkmanager --licenses

      - name: Add google-services.json
        run: |
            echo '${{ secrets.GOOGLE_SERVICES_JSON }}' > android/app/google-services.json
            
      - name: Install dependencies
        run: flutter pub get

      - name: Build release APK
        run: flutter build apk --release --no-tree-shake-icons

      - name: Deploy to Firebase App Distribution
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{ secrets.FIREBASE_APP_ID }}
          serviceCredentialsFileContent: ${{ secrets.GOOGLE_APPLICATION_CREDENTIALS }}
          groups: testers
          file: build/app/outputs/flutter-apk/app-release.apk
          releaseNotesFile: release_notes.txt

      - name: Bump Flutter app version
        if: success()
        run: |
          strategy=${{ github.event.inputs.version_bump_strategy || 'patch' }}
          current_version=$(grep '^version:' pubspec.yaml | cut -d ' ' -f2)
          
          base=$(echo $current_version | cut -d+ -f1)
          build_number=$(echo $current_version | grep -oP '(?<=\+)\d+' || echo 0)

          major=$(echo $base | cut -d. -f1)
          minor=$(echo $base | cut -d. -f2)
          patch=$(echo $base | cut -d. -f3)

          if [ "$strategy" == "major" ]; then
            major=$((major + 1)); minor=0; patch=0; build_number=0
          elif [ "$strategy" == "minor" ]; then
            minor=$((minor + 1)); patch=0; build_number=0
          elif [ "$strategy" == "patch" ]; then
            patch=$((patch + 1)); build_number=0
          elif [ "$strategy" == "build" ]; then
            build_number=$((build_number + 1))
          fi

          if [ "$build_number" -gt 0 ]; then
            new_version="$major.$minor.$patch+$build_number"
          else
            new_version="$major.$minor.$patch"
          fi
          
          sed -i "s/^version: .*/version: $new_version/" pubspec.yaml
          echo "New version: $new_version" > version.txt

      - name: Commit version bump
        if: success()
        run: |
          new_version=$(cat version.txt | cut -d ' ' -f3)
          git add pubspec.yaml
          git commit -m "Bumped version to $new_version ✅"
          git push
